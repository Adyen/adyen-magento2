<?php
/**
 *
 * Adyen Payment module (https://www.adyen.com/)
 *
 * Copyright (c) 2015 Adyen BV (https://www.adyen.com/)
 * See LICENSE.txt for license details.
 *
 * Author: Adyen <magento@adyen.com>
 */

/**
 * @var \Adyen\Payment\Block\Checkout\Success $block
 */
?>
<script type="text/javascript">
    // Refresh cart status
    require(['Magento_Customer/js/customer-data'], function (customerData) {
        'use strict';

        customerData.reload(['cart'], true);
    });
</script>
<?php if ($block->renderAction()): ?>
    <script type="text/javascript">
        require([
            'jquery',
            'Adyen_Payment/js/adyen'
        ], function ($, AdyenWeb) {
        (async function () { // RequireJS does not support async callback
            var action = JSON.parse('<?= /* @noEscape */ $block->getAction(); ?>');
            var checkoutComponent = await window.AdyenWeb.AdyenCheckout({
                locale: '<?= $block->escapeJs($block->getLocale()); ?>',
                countryCode: '<?= $block->escapeJs($block->getOrder()->getBillingAddress()->getCountryId()); ?>',
                environment: '<?= $block->escapeJs($block->getEnvironment()); ?>',
                clientKey: '<?= $block->escapeJs($block->getClientKey()); ?>'
            });
            try {
                checkoutComponent.createFromAction(action).mount('#ActionContainer');
            } catch(err) {
                // Action component cannot be created
            }
        })();
        });
    </script>
    <div id="ActionContainer"></div>
<?php endif; ?>
<?php if ($block->showAdyenGiving()):
    $checkoutConfig = /* @noEscape */
    $block->getSerializedCheckoutConfig();
    $scriptString = __('window.checkoutConfig = %1;', $checkoutConfig);
?>
<script>
    <?= /* @noEscape */ $scriptString ?>
    require([
        'jquery',
        'Adyen_Payment/js/adyen',
        'Adyen_Payment/js/model/adyen-payment-service'
    ], function ($, AdyenCheckout, adyenPaymentService) {
    (async function () { // RequireJS does not support async callback
        function handleOnDonate(state, component) {
            if (state.isValid) {
                let payload = state.data;
                payload.returnUrl = window.location.href;

                const orderId = <?= $block->escapeJs($block->getOrder()->getId()) ?>;
                const isLoggedIn = Boolean(<?= $block->escapeJs($block->getIsCustomerLoggedIn()) ?>);
                const maskedQuoteId = "<?= $block->escapeJs($block->getMaskedQuoteId()) ?>";

                adyenPaymentService.donate(payload, isLoggedIn, orderId, maskedQuoteId)
                    .done(function (response) {
                        component.setStatus("success");
                    })
                    .fail(function (response) {
                        component.setStatus('error');
                    });
            } else {
                component.setStatus('ready');
            }
        }
        function handleOnCancel(state, component) {
            // Redirect to default 'Continue Shopping' action
            let continueActionUrl = $('.primary.action.continue')[0].href;
            window.location = continueActionUrl;
        }
        const donationConfig = {
            amounts: {
                currency: "<?= $block->escapeJs($block->getOrder()->getOrderCurrencyCode()) ?>",
                values: [<?= $block->escapeJs($block->getDonationComponentConfiguration()['donationAmounts']); ?>]
            },
            backgroundUrl: "<?= $block->escapeJs($block->getDonationComponentConfiguration()['backgroundUrl']); ?>",
            description: "<?= $block->escapeJs($block->getDonationComponentConfiguration()['description']); ?>",
            logoUrl: "<?= $block->escapeJs($block->getDonationComponentConfiguration()['logoUrl']); ?>",
            name: "<?= $block->escapeJs($block->getDonationComponentConfiguration()['name']); ?>",
            url: "<?= $block->escapeJs($block->getDonationComponentConfiguration()['website']); ?>",
            showCancelButton: true,
            onDonate: handleOnDonate,
            onCancel: handleOnCancel
        };
        var checkoutComponent = await AdyenCheckout({
            locale: '<?= $block->escapeJs($block->getLocale()); ?>',
            environment: '<?= $block->escapeJs($block->getEnvironment()); ?>',
            clientKey: '<?= $block->escapeJs($block->getClientKey()); ?>'
        });
        try {
            const donation = checkoutComponent.create('donation', donationConfig).mount('#donation-container');
        } catch(err) {
            // Action component cannot be created
            console.log(err);
        }
    })();
    });
</script>
<div id='donation-container'></div>
<?php endif; ?>
